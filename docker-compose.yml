services:
  nginx-tabantaj:
    image: nginx:stable-alpine
    container_name: nginx-tabantaj
    restart: unless-stopped
    tty: true
    ports:
      - 80:80/tcp
      - 443:443/tcp
      # - 8080:8080
    volumes:
      - ./public:/var/www/html/public:ro
      - .:/var/www/html
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./storage:/var/www/html/storage:ro
      - ./storage/cursos:/var/www/html/storage/cursos:ro
      - ./storage/empleados:/var/www/html/storage/empleados:ro
      - ./infra/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - php
      - postgres-tabantaj
      - redis-tabantaj
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
        max-size: "30m"
        max-file: "1"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - tabantajnetwork

  postgres-tabantaj:
    image: postgres:16-alpine
    container_name: postgres-tabantaj
    restart: unless-stopped
    tty: true
    volumes:
      # - ./infra/postgres/data:/var/lib/postgresql/data #localpath
      - tabantaj-database:/var/lib/postgresql/data
      - ./infra/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
    env_file:
      - .env
    ports:
      - "5432:5432"
    networks:
      - tabantajnetwork
    mem_limit: 8g

  php:
    #uncomment this if you will use only docker compose
    build:
      context: "./infra/php/"
      dockerfile: Dockerfile
    #     # target: php-production  # Specify the target build stage if applicable
    #     # args:
    #     # - BUILD_ENV=production  # Pass any necessary build arguments
    # #container_name: php-tabantaj
    #uncomment this if you will use only docker compose
    #image: johnvo95/tabantaj_php-tabantaj:latest
    container_name: php-tabantaj
    restart: unless-stopped
    tty: true
    ports:
    - 9000:80
    volumes:
      - .:/var/www/html
      - ./infra/php/php.ini:/usr/local/etc/php/php.ini
      - ./infra/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
    networks:
      - tabantajnetwork
    mem_limit: 10g

  queue-worker:
    build:
      context: "./infra/php/"
      dockerfile: Dockerfile
    volumes:
      - .:/var/www/html
      - ./infra/php/php.ini:/usr/local/etc/php/php.ini
      - ./infra/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
    command: php artisan queue:work --tries=6 --memory=6144 --max-jobs=1000 --max-time=3600
    depends_on:
      - php
    container_name: queue-worker-tabantaj
    restart: unless-stopped
    tty: true
    environment:
      CONTAINER_ROLE: queue
    networks:
      - tabantajnetwork
    mem_limit: 6g

  schedule-worker:
    build:
      context: "./infra/php/"
      dockerfile: Dockerfile
    depends_on:
      - php
    restart: unless-stopped
    tty: true
    container_name: schedule-worker-tabantaj
    volumes:
      - .:/var/www/html
      - ./infra/php/php.ini:/usr/local/etc/php/php.ini
      - ./infra/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
    command: php artisan schedule:work
    environment:
      CONTAINER_ROLE: scheduler
    networks:
      - tabantajnetwork
    mem_limit: 2g

  redis-tabantaj:
    image: redis:alpine
    container_name: redis-tabantaj
    restart: unless-stopped
    tty: true
    volumes:
      - ./infra/redis/redis.conf:/usr/local/etc/redis/redis.conf # Mount the Redis configuration file
    networks:
      - tabantajnetwork
    # networks:
    #   - tabantajnetwork
    mem_limit: 4g

  rdadmin-tabantaj:
    image: erikdubbelboer/phpredisadmin:latest
    container_name: rdadmin-tabantaj
    restart: unless-stopped
    tty: true
    ports:
      - 6360:80
    env_file:
      - .env
    networks:
      - tabantajnetwork
    # networks:
    #   - tabantajnetwork
    mem_limit: 1g

#   rabbitmq-tabantaj:
#     image: rabbitmq:3-management-alpine
#     container_name: rabbitmq-tabantaj
#     env_file:
#       - .env
#     ports:
#       - 5672:5672
#       - 15672:15672
#     tty: true
#     networks:
#       - tabantajnetwork
#     volumes:
#       - ./infra/rabbit/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
#       - rabbitmq_data:/var/lib/rabbitmq
#     mem_limit: 6g

#   goservices:
#     image: ghcr.io/silent4devs/goservices:latest
#     container_name: goservices
#     restart: unless-stopped
#     tty: true
#     ports:
#       - "3300:3300"
#     volumes:
#       - goservices_data:/goservices
#     networks:
#       - tabantajnetworkx

#   reportservice:
#     image: ghcr.io/silent4devs/reportservice:latest
#     container_name: reportservice
#     restart: unless-stopped
#     tty: true
#     ports:
#       - "3301:3301"
#     volumes:
#       - reportservice_data:/reportservice
#     networks:
#       - tabantajnetwork

volumes:
  tabantaj-database:
    driver: local
#   rabbitmq_data:
#     driver: local
#   pgadmin-data:
#     driver: local
#   goservices_data:
#     driver: local
#   reportservice_data:
#     driver: local

networks:
  tabantajnetwork:
    driver: bridge
